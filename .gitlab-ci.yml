image: node:10-alpine

variables:
  DOCKER_DRIVER: overlay2

stages:
  - install
  - test
  - build
  - docker
  - deploy
  - cleanup

install:
  stage: install
  script: yarn
  cache:
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/

test:server:
  stage: test
  script: yarn test:server
  cache:
    policy: pull
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
  artifacts:
    reports:
      junit: reports/junitresults.xml
    paths:
      - reports


test:client:
  stage: test
  script: yarn test:client
  cache:
    policy: pull
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
  artifacts:
    reports:
      junit: reports/junitresults.xml
    paths:
      - reports

lint:
  stage: test
  script: yarn lint
  cache:
    policy: pull
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/

flow:
  image: node:10
  stage: test
  script: yarn flow
  cache:
    policy: pull
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/

build:app:
  stage: build
  variables:
    NODE_ENV: production
  script: yarn build:client
  cache:
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
  cache:
    key: '$CI_COMMIT_REF_SLUG-client'
    paths:
      - dist/client
  dependencies: []

build:server:
  stage: build
  variables:
    NODE_ENV: production
  script: yarn build:server
  cache:
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
  cache:
    key: '$CI_COMMIT_REF_SLUG-server'
    paths:
      - dist/server
  dependencies: []

codecov:
  stage: build
  script: yarn test:codecov
  cache:
    policy: pull
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules/
  dependencies:
    - test:client
    - test:server

docker:app:
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  image: docker:latest
  stage: docker
  script:
    - docker build -t registry.gitlab.com/marudor/bahnhofsabfahrten/client -f ./Dockerfile.client .
    - docker tag registry.gitlab.com/marudor/bahnhofsabfahrten/client registry.gitlab.com/marudor/bahnhofsabfahrten/client:${CI_COMMIT_SHA}
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker push registry.gitlab.com/marudor/bahnhofsabfahrten/client
    - docker push registry.gitlab.com/marudor/bahnhofsabfahrten/client:${CI_COMMIT_SHA}
  cache:
    policy: pull
    key: '$CI_COMMIT_REF_SLUG-client'
    paths:
      - dist/
  dependencies: []


docker:server:
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  image: docker:latest
  stage: docker
  script:
    - docker build -t registry.gitlab.com/marudor/bahnhofsabfahrten/server -f ./Dockerfile.server .
    - docker tag registry.gitlab.com/marudor/bahnhofsabfahrten/server registry.gitlab.com/marudor/bahnhofsabfahrten/server:${CI_COMMIT_SHA}
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker push registry.gitlab.com/marudor/bahnhofsabfahrten/server
    - docker push registry.gitlab.com/marudor/bahnhofsabfahrten/server:${CI_COMMIT_SHA}
  cache:
    policy: pull
    key: '$CI_COMMIT_REF_SLUG-server'
    paths:
      - dist/
  dependencies: []


deploy:beta:
  stage: deploy
  image: alpine
  script: ./deploy.sh "$CI_COMMIT_SHA" "-beta"
  environment:
    name: beta
  only:
    - master
  dependencies: []


deploy:prod:
  stage: deploy
  image: alpine
  script: ./deploy.sh "$CI_COMMIT_SHA" ""
  environment:
    name: production
  when: manual
  only:
    - master
  dependencies: []


cleanup:
  stage: cleanup
  script:
    - apk update && apk add --no-cache jq curl
    - ./cleanupOld.sh server
    - ./cleanupOld.sh client
  dependencies: []
